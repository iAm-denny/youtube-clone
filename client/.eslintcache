[{"D:\\Programming\\projects\\youtube-clone\\client\\src\\index.tsx":"1","D:\\Programming\\projects\\youtube-clone\\client\\src\\App.tsx":"2","D:\\Programming\\projects\\youtube-clone\\client\\src\\Components\\Header\\Header.tsx":"3","D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\Home\\Home.tsx":"4","D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\Detail\\Detail.tsx":"5","D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\Auth\\Login.tsx":"6","D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\Auth\\Signup.tsx":"7","D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\Subscription\\Subscription.tsx":"8","D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\WatchLater\\WatchLater.tsx":"9","D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\Channel\\Channel.tsx":"10","D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\UploadVideo\\UploadVideo.tsx":"11","D:\\Programming\\projects\\youtube-clone\\client\\src\\Helper\\Context.tsx":"12"},{"size":303,"mtime":1608017986274,"results":"13","hashOfConfig":"14"},{"size":3810,"mtime":1608449035229,"results":"15","hashOfConfig":"14"},{"size":6113,"mtime":1608454274608,"results":"16","hashOfConfig":"14"},{"size":1516,"mtime":1608449750650,"results":"17","hashOfConfig":"14"},{"size":6361,"mtime":1608451212588,"results":"18","hashOfConfig":"14"},{"size":2231,"mtime":1608366685316,"results":"19","hashOfConfig":"14"},{"size":2002,"mtime":1608349965488,"results":"20","hashOfConfig":"14"},{"size":2783,"mtime":1608450322127,"results":"21","hashOfConfig":"14"},{"size":1503,"mtime":1608098885531,"results":"22","hashOfConfig":"14"},{"size":1112,"mtime":1608380548451,"results":"23","hashOfConfig":"14"},{"size":2639,"mtime":1608371709854,"results":"24","hashOfConfig":"14"},{"size":156,"mtime":1608366254489,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1hnnjhh",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"D:\\Programming\\projects\\youtube-clone\\client\\src\\index.tsx",[],["56","57"],"D:\\Programming\\projects\\youtube-clone\\client\\src\\App.tsx",["58","59","60"],"D:\\Programming\\projects\\youtube-clone\\client\\src\\Components\\Header\\Header.tsx",["61","62","63","64"],"D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\Home\\Home.tsx",["65"],"D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\Detail\\Detail.tsx",["66","67","68","69","70"],"D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\Auth\\Login.tsx",[],"D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\Auth\\Signup.tsx",[],"D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\Subscription\\Subscription.tsx",["71"],"D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\WatchLater\\WatchLater.tsx",["72"],"import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./WatchLater.scss\";\r\n\r\nfunction WatchLater() {\r\n  return (\r\n    <div className=\"watchLater-container\">\r\n        <h2>Watch later</h2>\r\n        {\r\n            [0,1,2,3,4,5].map(() => {\r\n                return(\r\n                    <Link to=\"/detail\">\r\n                    <div className=\"video\">\r\n                      <ReactPlayer\r\n                        width=\"300px\"\r\n                        height=\"200px\"\r\n                        url=\"https://res.cloudinary.com/dwnci9jxp/video/upload/v1608018837/Different_Heaven_-_Nekozilla_LFZ_Remix_NCS_Release_okminx.mkv\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"person\">\r\n                      <div className=\"user\">\r\n                        <div className=\"profile\">\r\n                          <img src=\"https://simg.nicepng.com/png/small/851-8517636_skin-element-http-i-imgur-com-t8thkso-girl.png\" />\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"title\">Cool Music</div>\r\n                          <div className=\"user_name\">Denny</div>\r\n                          <div className=\"timestamp\">30 minutes ago</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                )\r\n            })\r\n        }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WatchLater;\r\n",["73","74"],"D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\Channel\\Channel.tsx",["75"],"import React,{ useState, useContext } from \"react\";\r\nimport \"./channel.scss\";\r\nimport { ProfileContext } from '../../Helper/Context'\r\n\r\nfunction Channel() {\r\n    const [ toggleForm, setToggleForm ] = useState<Boolean>(false)\r\n    const { name, profileImg  } = useContext<any>(ProfileContext)\r\n  return (\r\n    <>\r\n      <div className=\"channel-container\">\r\n        <div className=\"image\">\r\n          <img src={profileImg} />\r\n          {name}\r\n        </div>\r\n        <div className=\"follow\">\r\n          <button onClick={() => setToggleForm(!toggleForm)}>Update Profile Image</button>\r\n          <div>\r\n            Followers - <span>15</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <UpdateProfile toggleForm={toggleForm} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Channel;\r\n\r\ninterface Props {\r\n    toggleForm: Boolean\r\n}\r\nfunction UpdateProfile({toggleForm}: Props) {\r\n    return (\r\n        <form className={toggleForm  ? \"update active\" : \"update\"}>\r\n            <input type=\"hidden\" value=\"123\" />\r\n            <input type=\"file\" />\r\n            <button>Update</button>\r\n        </form>\r\n    )\r\n}\r\n","D:\\Programming\\projects\\youtube-clone\\client\\src\\Pages\\UploadVideo\\UploadVideo.tsx",["76","77"],"import React, { useState } from \"react\";\r\nimport \"./UploadVideo.scss\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nfunction UploadVideo() {\r\n  const [load, setLoad] = useState<Boolean>(false);\r\n  const [file, setFile] = useState<any>(\"\");\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n  const [video_url, setVideoUrl] = useState<any>(\"\");\r\n  const changeHandle = (e: any) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const submitHandle = (e: any) => {\r\n    setLoad(true);\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"we6nofuq\");\r\n    formData.append(\"folder\", \"youtube\");\r\n    axios \r\n      .post(\"https://api.cloudinary.com/v1_1/dwnci9jxp/video/upload\", formData)\r\n      .then((res) => {\r\n        axios.post('http://localhost:4000/video/post', {\r\n            title:title,\r\n            description: description,\r\n            video_url: res.data.url\r\n        }, {\r\n            headers: {\r\n            authorization: cookies.get(\"token\")\r\n            }\r\n          }\r\n        )\r\n        })\r\n        .then(() => {\r\n            setLoad(false)\r\n            toast.success('Upload Successfully');\r\n        })\r\n      .catch((err) => {\r\n        setLoad(false);\r\n        toast.error(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={submitHandle}>\r\n        <h2>Upload Video</h2>\r\n        <input type=\"hidden\" />\r\n        <input\r\n          type=\"file\"\r\n          className={load ? \"input active\" : \"\"}\r\n          onChange={changeHandle}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Title...\"\r\n          className={load ? \"input active\" : \"\"}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Description...\"\r\n          className={load ? \"input active\" : \"\"}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n        <button className={load ? \"clicked active\" : \"clicked \"}>Upload</button>\r\n        <div className=\"note\">\r\n          <span>Note -</span> If video size is larger , it'll take time to\r\n          upload\r\n        </div>\r\n        <div className={load ? \"loader active\" : \"loader\"}>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadVideo;\r\n","D:\\Programming\\projects\\youtube-clone\\client\\src\\Helper\\Context.tsx",["78","79"],"import React,{ createContext, useState } from 'react'\r\n\r\nexport const AuthContext = createContext({})\r\nexport const ProfileContext = createContext({})\r\n\r\n\r\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":24},{"ruleId":"84","severity":1,"message":"88","line":12,"column":8,"nodeType":"86","messageId":"87","endLine":12,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":53,"column":20,"nodeType":"91","messageId":"92","endLine":53,"endColumn":22},{"ruleId":"84","severity":1,"message":"93","line":38,"column":13,"nodeType":"86","messageId":"87","endLine":38,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":77,"column":13,"nodeType":"96","endLine":81,"endColumn":15},{"ruleId":"89","severity":1,"message":"90","line":102,"column":53,"nodeType":"91","messageId":"92","endLine":102,"endColumn":55},{"ruleId":"94","severity":1,"message":"95","line":112,"column":31,"nodeType":"96","endLine":112,"endColumn":60},{"ruleId":"94","severity":1,"message":"95","line":38,"column":19,"nodeType":"96","endLine":38,"endColumn":49},{"ruleId":"84","severity":1,"message":"97","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":19},{"ruleId":"84","severity":1,"message":"98","line":9,"column":10,"nodeType":"86","messageId":"87","endLine":9,"endColumn":18},{"ruleId":"84","severity":1,"message":"99","line":33,"column":11,"nodeType":"86","messageId":"87","endLine":33,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":151,"column":6,"nodeType":"102","endLine":151,"endColumn":8,"suggestions":"103"},{"ruleId":"94","severity":1,"message":"95","line":181,"column":11,"nodeType":"96","endLine":181,"endColumn":41},{"ruleId":"94","severity":1,"message":"95","line":52,"column":19,"nodeType":"96","endLine":52,"endColumn":49},{"ruleId":"94","severity":1,"message":"95","line":24,"column":27,"nodeType":"96","endLine":24,"endColumn":134},{"ruleId":"80","replacedBy":"104"},{"ruleId":"82","replacedBy":"105"},{"ruleId":"94","severity":1,"message":"95","line":12,"column":11,"nodeType":"96","endLine":12,"endColumn":35},{"ruleId":"84","severity":1,"message":"106","line":14,"column":10,"nodeType":"86","messageId":"87","endLine":14,"endColumn":19},{"ruleId":"84","severity":1,"message":"107","line":14,"column":21,"nodeType":"86","messageId":"87","endLine":14,"endColumn":32},{"ruleId":"84","severity":1,"message":"108","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":13},{"ruleId":"84","severity":1,"message":"109","line":1,"column":31,"nodeType":"86","messageId":"87","endLine":1,"endColumn":39},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"@typescript-eslint/no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'WatchLater' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'res' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'UploadVideo' is defined but never used.","'resolve4' is defined but never used.","'Props' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getComments', 'getLike', and 'specificVideo'. Either include them or remove the dependency array.","ArrayExpression",["112"],["110"],["111"],"'video_url' is assigned a value but never used.","'setVideoUrl' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [getComments, getLike, specificVideo]",{"range":"115","text":"116"},[3656,3658],"[getComments, getLike, specificVideo]"]